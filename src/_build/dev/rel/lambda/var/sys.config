[{jason,[]},
 {logger,
     [{sync_threshold,20},
      {compile_time_application,nil},
      {translator_inspect_opts,[]},
      {translators,[{'Elixir.Logger.Translator',translate}]},
      {handle_sasl_reports,false},
      {discard_threshold,500},
      {console,[]},
      {compile_time_purge_level,debug},
      {truncate,8096},
      {handle_otp_reports,true},
      {utc_log,false},
      {level,debug},
      {compile_time_purge_matching,[]},
      {backends,[console]},
      {discard_threshold_for_error_logger,500}]},
 {elixir,
     [{ansi_enabled,false},
      {time_zone_database,'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
 {lambda,[]},
 {runtime_tools,[]},
 {artificery,[]},
 {iex,
     [{colors,[]},
      {alive_prompt,<<"%prefix(%node)%counter>">>},
      {default_prompt,<<"%prefix(%counter)>">>},
      {history_size,20},
      {inspect,[{pretty,true}]}]},
 {compiler,[]},
 {stdlib,[]},
 {distillery,[{config_providers,[]}]},
 {kernel,
     [{logger_level,notice},
      {logger_sasl_compatible,false},
      {logger,
          [{handler,default,logger_std_h,
               #{config => #{type => standard_io},
                 formatter =>
                     {logger_formatter,
                         #{legacy_header => true,single_line => false}}}}]}]},
 {sasl,[{errlog_type,error},{sasl_error_logger,false}]},
 {mix,[{colors,[]}]}].
